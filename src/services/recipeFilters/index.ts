
import { SupabaseRecipe } from '@/types/supabase';
import { UserPreference } from '../preferenceFilters';
import { getRecipesByMealType } from './mealTypeFilters';
import { filterRecipesByIngredient, filterRecipesByMultipleIngredients, getAllRecipeIngredients, hasIngredientMatch } from './ingredientFilters';
import { filterRecipesByCategory } from './categoryFilters';

// Re-export all filter functions from their respective modules
export { 
  getAllRecipeIngredients,
  hasIngredientMatch,
  filterRecipesByIngredient,
  filterRecipesByMultipleIngredients
} from './ingredientFilters';

export { getRecipesByMealType } from './mealTypeFilters';
export { filterRecipesByCategory } from './categoryFilters';

// Komplex sz≈±r√©s kateg√≥ria + alapanyag + √©tkez√©si t√≠pus alapj√°n
export const getRecipesByCategory = (
  recipes: SupabaseRecipe[],
  mealTypeRecipes: Record<string, string[]>,
  categories: Record<string, string[]>,
  category: string,
  ingredient?: string,
  mealType?: string,
  userPreferences?: UserPreference[]
): SupabaseRecipe[] => {
  console.log(`üîç Komplex sz≈±r√©s - Kateg√≥ria: ${category}, Alapanyag: ${ingredient}, √âtkez√©si t√≠pus: ${mealType}`);
  
  let filteredRecipes = recipes;

  // 1. L√âP√âS: √âtkez√©si t√≠pus sz≈±r√©s (ha van)
  if (mealType) {
    filteredRecipes = getRecipesByMealType(filteredRecipes, mealTypeRecipes, mealType, userPreferences);
    console.log(`üìã √âtkez√©si t√≠pus ut√°n: ${filteredRecipes.length} recept`);
    
    if (filteredRecipes.length === 0) {
      console.log('‚ùå Nincs recept ehhez az √©tkez√©si t√≠pushoz');
      return [];
    }
  }

  // 2. L√âP√âS: Konkr√©t alapanyag sz≈±r√©s (ha van)
  if (ingredient) {
    filteredRecipes = filterRecipesByIngredient(filteredRecipes, ingredient);
    console.log(`üéØ Alapanyag sz≈±r√©s ut√°n: ${filteredRecipes.length} recept`);
    
    if (filteredRecipes.length === 0) {
      console.log(`‚ùå Nincs recept "${ingredient}" alapanyaggal`);
      return [];
    }
  }
  // 3. L√âP√âS: Kateg√≥ria sz≈±r√©s (ha nincs konkr√©t alapanyag)
  else if (category) {
    filteredRecipes = filterRecipesByCategory(filteredRecipes, categories, category);
    console.log(`ü•ï Kateg√≥ria sz≈±r√©s ut√°n: ${filteredRecipes.length} recept`);
    
    if (filteredRecipes.length === 0) {
      console.log(`‚ùå Nincs recept "${category}" kateg√≥ri√°b√≥l`);
      return [];
    }
  }

  console.log(`‚úÖ V√©gs≈ë eredm√©ny: ${filteredRecipes.length} recept`);
  return filteredRecipes;
};
